apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "springboot-app.fullname" . }}
  labels:
    app: {{ include "springboot-app.name" . }}
    version: {{ include "springboot-app.name" . }}-{{ .Values.image.tag }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "springboot-app.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "springboot-app.name" . }}
        version: {{ include "springboot-app.name" . }}-{{ .Values.image.tag }}
    spec:
      containers:
        - name: {{ include "springboot-app.name" . }}
          version: {{ include "springboot-app.name" . }}-{{ .Values.image.tag }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongodbUri
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers }}
            - name: SCHEMA_REGISTRY_URL
              value: {{ .Values.kafka.schemaRegistryUrl }}
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sasl-password-secret
                  key: saslPassword
            - name: SPRING_KAFKA_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: service-actor-management-configmap
                  key: SPRING_KAFKA_ENABLED
          resources:
            requests:
              ephemeral-storage: {{ .Values.resources.requests.ephemeralStorage }}
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          livenessProbe:
            httpGet:
              path: /service-actor-management/actuator/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /service-actor-management/actuator/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10