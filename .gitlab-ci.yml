image: gradle:jdk17-alpine

stages:
  - deploy

deploy:
  tags:
    - minikube
  stage: deploy
  when: manual
  before_script:
    - apk update
    - apk add docker
    - docker --version
    - apk add kubectl
    - GRADLE_USER_HOME="$(pwd)/.gradle"
    - export GRADLE_USER_HOME
    - apk update && apk add curl  # ✅ Install curl
    - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    - chmod +x minikube
    - mv minikube /usr/bin/  # ✅ Move to /usr/bin instead of /usr/local/bin
    - export PATH=$PATH:/usr/bin/  # ✅ Ensure /usr/bin is in PATH
    - minikube version  # ✅ Verify Minikube installation
    - eval $(minikube docker-env)  # ✅ Ensure Docker uses Minikube’s daemon
    - MINIKUBE_IP=$(minikube ip)   # ✅ Fetch Minikube’s IP dynamically
    - echo "Minikube IP is $MINIKUBE_IP"
    - echo "$KUBECONFIG_CONTENT" | grep -v "client-certificate" | grep -v "client-key" | grep -v "certificate-authority" > kubeconfig.yaml
    - export KUBECONFIG=$(pwd)/kubeconfig.yaml
    - kubectl config set-cluster minikube --kubeconfig=kubeconfig.yaml --server=https://$MINIKUBE_IP
    - kubectl config view
    - kubectl config get-contexts
    - ping -c 4 $MINIKUBE_IP  # ✅ Test network connectivity
  script:
    - kubectl get nodes
    - kubectl apply -f ops/helm/mongo-deployment.yaml -n default  # ✅ Explicit namespace
    - kubectl apply -f ops/helm/springboot-deployment.yaml -n default
